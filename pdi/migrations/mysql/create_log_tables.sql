-- define CHAIN_ID

-- Job log table
drop table if exists `job_logs_${CHAIN_ID}`;
CREATE TABLE job_logs_${CHAIN_ID}
(
  ID_JOB INT
, CHANNEL_ID VARCHAR(255)
, JOBNAME VARCHAR(255)
, STATUS VARCHAR(15)
, LINES_READ BIGINT
, LINES_WRITTEN BIGINT
, LINES_UPDATED BIGINT
, LINES_INPUT BIGINT
, LINES_OUTPUT BIGINT
, LINES_REJECTED BIGINT
, ERRORS BIGINT
, STARTDATE DATETIME
, ENDDATE DATETIME
, LOGDATE DATETIME
, DEPDATE DATETIME
, REPLAYDATE DATETIME
, LOG_FIELD LONGTEXT
)
;
CREATE INDEX IDX_job_logs_${CHAIN_ID}_1 ON job_logs_${CHAIN_ID}(ID_JOB)
;
CREATE INDEX IDX_job_logs_${CHAIN_ID}_2 ON job_logs_${CHAIN_ID}(ERRORS, STATUS, JOBNAME)
;



drop table if exists `transformation_logs_${CHAIN_ID}`;
-- Transformation log table
--

CREATE TABLE transformation_logs_${CHAIN_ID}
(
  ID_BATCH INT
, CHANNEL_ID VARCHAR(255)
, TRANSNAME VARCHAR(255)
, STATUS VARCHAR(15)
, LINES_READ BIGINT
, LINES_WRITTEN BIGINT
, LINES_UPDATED BIGINT
, LINES_INPUT BIGINT
, LINES_OUTPUT BIGINT
, LINES_REJECTED BIGINT
, ERRORS BIGINT
, STARTDATE DATETIME
, ENDDATE DATETIME
, LOGDATE DATETIME
, DEPDATE DATETIME
, REPLAYDATE DATETIME
, LOG_FIELD LONGTEXT
)
;
CREATE INDEX IDX_transformation_logs_${CHAIN_ID}_1 ON transformation_logs_${CHAIN_ID}(ID_BATCH)
;
CREATE INDEX IDX_transformation_logs_${CHAIN_ID}_2 ON transformation_logs_${CHAIN_ID}(ERRORS, STATUS, TRANSNAME)
;
